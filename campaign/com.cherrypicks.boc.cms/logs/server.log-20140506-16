[INFO ][2014-05-06 16:01:00,173][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 16:01:00,247][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,312][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,322][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,333][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,375][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,409][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 16:01:00,444][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,484][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,548][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,613][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:00,688][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:01:02,933][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:01:03,104][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:01:04,766][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:01:04,829][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:01:04,844][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:01:04,908][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:01:16,930][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:01:30,094][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:01:33,730][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:01:36,131][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:01:41,311][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:01:43,657][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:01:57,865][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:01:58,074][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:01:59,902][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:02:19,581][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:02:21,764][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:02:29,856][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:2 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 16:08:45,585][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 16:08:45,586][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 16:08:45,655][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 16:08:45,984][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 16:08:46,065][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 16:08:46,588][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 16:08:46,621][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 16:08:46,643][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 16:08:46,667][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 16:08:46,689][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 16:08:46,713][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 16:08:46,738][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 16:08:46,758][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 16:08:46,769][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 16:08:46,781][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 16:08:46,792][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 16:08:46,809][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 16:08:46,825][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 16:08:47,019][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 16:08:47,095][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 16:08:47,364][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@51d36f77, org.springframework.security.web.context.SecurityContextPersistenceFilter@103b1799, org.springframework.security.web.authentication.logout.LogoutFilter@178a4622, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@77026e40, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@409468ca, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f6bc6e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ccf0d1f, org.springframework.security.web.session.SessionManagementFilter@4d668534, org.springframework.security.web.access.ExceptionTranslationFilter@5b3409f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3b5789a5]
[INFO ][2014-05-06 16:08:47,390][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 16:08:58,191][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lvfbgrikd769|6d3fe849, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lvfbgrikd769|6d3fe849, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 16:08:58,821][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 16:08:58,979][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 16:09:01,916][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:09:03,287][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:09:04,297][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:09:16,900][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:09:26,004][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:09:46,155][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:09:50,366][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:50,715][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 16:09:50,751][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 16:09:50,876][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:50,880][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,133][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,334][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,448][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,587][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,645][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,655][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:51,720][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 16:09:53,355][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:09:56,967][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:10:25,314][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:17:30,754][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 16:17:30,755][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 16:17:30,831][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 16:17:31,121][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 16:17:31,190][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 16:17:31,739][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 16:17:31,780][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 16:17:31,800][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 16:17:31,822][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 16:17:31,844][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 16:17:31,872][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 16:17:31,903][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 16:17:31,922][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 16:17:31,937][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 16:17:31,957][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 16:17:31,975][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 16:17:31,988][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 16:17:32,008][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 16:17:32,231][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 16:17:32,298][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 16:17:32,554][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@4328ea3f, org.springframework.security.web.context.SecurityContextPersistenceFilter@332af08b, org.springframework.security.web.authentication.logout.LogoutFilter@48164feb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30d8f246, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7309eab7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1010cf62, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f9f332b, org.springframework.security.web.session.SessionManagementFilter@6cd86cae, org.springframework.security.web.access.ExceptionTranslationFilter@74c74b55, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4822f558]
[INFO ][2014-05-06 16:17:32,579][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 16:17:44,779][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lvqkngfnd9an|7eab48a7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lvqkngfnd9an|7eab48a7, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 16:17:45,863][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 16:17:47,021][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 16:17:49,965][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:17:50,202][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:18:37,141][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 16:18:37,141][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 16:18:37,212][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 16:18:37,492][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 16:18:37,571][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 16:18:38,072][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 16:18:38,104][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 16:18:38,122][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 16:18:38,146][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 16:18:38,168][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 16:18:38,195][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 16:18:38,233][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 16:18:38,249][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 16:18:38,261][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 16:18:38,274][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 16:18:38,291][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 16:18:38,306][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 16:18:38,329][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 16:18:38,559][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 16:18:38,645][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 16:18:38,880][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@31395750, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b935e6f, org.springframework.security.web.authentication.logout.LogoutFilter@581cdfc2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4fa666bf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35a3ae73, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d121b88, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fcd846c, org.springframework.security.web.session.SessionManagementFilter@6db0dec3, org.springframework.security.web.access.ExceptionTranslationFilter@76f10c77, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b6995a2]
[INFO ][2014-05-06 16:18:38,904][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 16:18:46,106][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lvrzvgg6o0y0|20e0b1d6, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lvrzvgg6o0y0|20e0b1d6, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 16:18:46,746][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 16:18:46,883][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 16:18:50,362][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:18:50,553][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:18:53,082][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:19:23,291][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:22:23,526][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 16:22:23,526][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 16:22:23,592][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 16:22:23,906][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 16:22:23,988][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 16:22:24,641][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 16:22:24,707][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 16:22:24,730][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 16:22:24,754][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 16:22:24,775][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 16:22:24,794][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 16:22:24,824][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 16:22:24,845][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 16:22:24,868][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 16:22:24,887][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 16:22:24,906][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 16:22:24,922][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 16:22:24,942][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 16:22:25,158][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 16:22:25,230][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 16:22:25,511][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@35a3ae73, org.springframework.security.web.context.SecurityContextPersistenceFilter@d121b88, org.springframework.security.web.authentication.logout.LogoutFilter@1fcd846c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6db0dec3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76f10c77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b6995a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@dee55c, org.springframework.security.web.session.SessionManagementFilter@29a3fb76, org.springframework.security.web.access.ExceptionTranslationFilter@4cd21555, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7476a6d9]
[INFO ][2014-05-06 16:22:25,546][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 16:22:32,293][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lvwukr4f2dhc|6d3fe849, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lvwukr4f2dhc|6d3fe849, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 16:22:37,591][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 16:22:37,866][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 16:22:40,530][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:22:40,708][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:22:42,374][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:22:42,604][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:23:21,604][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:23:21,809][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:23:41,416][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:23:41,519][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:23:46,265][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:23:46,505][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 16:23:47,407][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:23:47,607][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 16:23:53,504][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
