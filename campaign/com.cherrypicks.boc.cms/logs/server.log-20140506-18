[INFO ][2014-05-06 18:05:28,262][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:05:28,263][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:05:28,363][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:05:28,640][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:05:28,723][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:05:29,205][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:05:29,239][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:05:29,256][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:05:29,273][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:05:29,293][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:05:29,313][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:05:29,349][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:05:29,370][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:05:29,383][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:05:29,397][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:05:29,412][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:05:29,433][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:05:29,447][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:05:29,678][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:05:29,762][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:05:30,002][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@74c74b55, org.springframework.security.web.context.SecurityContextPersistenceFilter@4822f558, org.springframework.security.web.authentication.logout.LogoutFilter@6f198967, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@758c022c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ae2d2fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18a3fe6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b6915d4, org.springframework.security.web.session.SessionManagementFilter@10181f5b, org.springframework.security.web.access.ExceptionTranslationFilter@1fb2979e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6001654]
[INFO ][2014-05-06 18:05:30,025][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:05:41,330][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lzleqvemnx47|4b5d7792, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lzleqvemnx47|4b5d7792, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 18:05:42,245][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 18:05:42,362][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 18:05:45,037][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:05:45,249][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:05:48,888][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:05:48,961][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:05:48,984][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:05:49,052][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:06:48,170][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:06:48,170][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:06:48,290][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:06:48,576][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:06:48,648][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:06:49,148][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:06:49,192][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:06:49,210][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:06:49,234][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:06:49,254][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:06:49,274][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:06:49,307][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:06:49,332][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:06:49,352][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:06:49,367][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:06:49,381][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:06:49,396][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:06:49,411][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:06:49,641][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:06:49,709][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:06:49,972][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@2b935e6f, org.springframework.security.web.context.SecurityContextPersistenceFilter@581cdfc2, org.springframework.security.web.authentication.logout.LogoutFilter@4fa666bf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@35a3ae73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d121b88, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1fcd846c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6db0dec3, org.springframework.security.web.session.SessionManagementFilter@76f10c77, org.springframework.security.web.access.ExceptionTranslationFilter@4b6995a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@dee55c]
[INFO ][2014-05-06 18:06:49,998][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:06:58,811][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lzn4f1z96dwf|7a5d5033, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lzn4f1z96dwf|7a5d5033, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 18:07:04,676][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 18:07:04,803][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 18:07:08,239][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:07:08,434][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:07:10,943][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:07:11,015][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:07:11,039][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:07:11,131][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:10:03,386][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:10:03,612][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:10:06,009][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:10:06,081][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:10:06,100][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:10:06,161][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:10:45,489][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,489][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,490][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,491][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,491][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,491][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,491][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,492][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,492][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,492][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,492][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,492][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - destroy
[INFO ][2014-05-06 18:10:45,492][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - destroy
[INFO ][2014-05-06 18:10:46,034][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:10:46,034][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:10:46,080][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:10:46,347][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:10:46,376][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:10:46,801][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:10:46,842][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:10:46,861][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:10:46,878][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:10:46,894][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:10:46,916][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:10:46,941][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:10:46,964][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:10:46,983][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:10:47,001][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:10:47,024][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:10:47,048][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:10:47,067][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:10:47,353][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:10:47,468][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:10:47,693][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@3701aec1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f781d1d, org.springframework.security.web.authentication.logout.LogoutFilter@56bf83ad, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@375dff59, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c274874, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7705f759, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@28b2311b, org.springframework.security.web.session.SessionManagementFilter@4ab5f87c, org.springframework.security.web.access.ExceptionTranslationFilter@70ccbb35, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1116ce6e]
[INFO ][2014-05-06 18:10:47,718][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:10:56,622][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:10:56,622][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:10:56,720][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:10:57,096][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:10:57,186][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:10:57,786][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:10:57,841][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:10:57,869][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:10:57,898][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:10:57,924][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:10:57,949][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:10:57,983][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:10:58,004][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:10:58,017][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:10:58,030][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:10:58,045][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:10:58,062][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:10:58,082][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:10:58,307][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:10:58,401][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:10:58,647][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@700dce12, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a543937, org.springframework.security.web.authentication.logout.LogoutFilter@f785762, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@25b0eadd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20b6680, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a765e8c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31395750, org.springframework.security.web.session.SessionManagementFilter@2b935e6f, org.springframework.security.web.access.ExceptionTranslationFilter@581cdfc2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fa666bf]
[INFO ][2014-05-06 18:10:58,669][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:11:22,505][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lzsg6s1r52sp1|7eab48a7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lzsg6s1r52sp1|7eab48a7, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 18:11:23,235][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 18:11:23,381][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 18:11:26,303][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:11:26,488][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:11:28,662][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:11:28,780][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:11:28,806][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:11:28,873][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:12:08,916][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:12:09,145][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:12:11,023][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:12:11,142][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:13:03,555][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:13:03,735][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:14:29,980][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:14:30,241][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:15:04,061][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:15:04,930][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:15:48,998][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:15:48,998][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:15:49,068][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:15:49,412][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:15:49,515][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:15:50,012][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:15:50,048][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:15:50,065][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:15:50,088][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:15:50,104][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:15:50,129][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:15:50,159][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:15:50,182][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:15:50,202][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:15:50,217][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:15:50,231][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:15:50,243][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:15:50,256][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:15:50,461][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:15:50,549][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:15:50,811][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@25b0eadd, org.springframework.security.web.context.SecurityContextPersistenceFilter@20b6680, org.springframework.security.web.authentication.logout.LogoutFilter@3a765e8c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@31395750, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b935e6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@581cdfc2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fa666bf, org.springframework.security.web.session.SessionManagementFilter@35a3ae73, org.springframework.security.web.access.ExceptionTranslationFilter@d121b88, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1fcd846c]
[INFO ][2014-05-06 18:15:50,837][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:16:01,180][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911lzypqu1dtkmvm|43c8308, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911lzypqu1dtkmvm|43c8308, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 18:16:05,061][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 18:16:06,246][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 18:16:21,620][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:16:21,670][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:16:23,054][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:16:23,299][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:16:23,337][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:16:23,775][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[WARN ][2014-05-06 18:16:25,628][com.mchange.v2.resourcepool.BasicResourcePool] - com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask@52e7bbeb -- Acquisition Attempt Failed!!! Clearing pending acquires. While trying to acquire a needed new resource, we failed to succeed more than the maximum number of allowed acquisition attempts (1). Last acquisition attempt exception: 
com.ibm.db2.jcc.am.DisconnectNonTransientConnectionException: [jcc][t4][2043][11550][3.64.96] 异常 java.net.ConnectException：打开端口 38,500 上服务器 office2.cherrypicks.com/115.160.176.82 的套接字时出错，消息为：Connection timed out: connect。 ERRORCODE=-4499, SQLSTATE=08001
	at com.ibm.db2.jcc.am.bd.a(bd.java:321)
	at com.ibm.db2.jcc.am.bd.a(bd.java:340)
	at com.ibm.db2.jcc.t4.vb.a(vb.java:433)
	at com.ibm.db2.jcc.t4.vb.<init>(vb.java:93)
	at com.ibm.db2.jcc.t4.a.b(a.java:356)
	at com.ibm.db2.jcc.t4.b.newAgent_(b.java:2028)
	at com.ibm.db2.jcc.am.Connection.initConnection(Connection.java:720)
	at com.ibm.db2.jcc.am.Connection.<init>(Connection.java:669)
	at com.ibm.db2.jcc.t4.b.<init>(b.java:332)
	at com.ibm.db2.jcc.DB2SimpleDataSource.getConnection(DB2SimpleDataSource.java:232)
	at com.ibm.db2.jcc.DB2SimpleDataSource.getConnection(DB2SimpleDataSource.java:198)
	at com.ibm.db2.jcc.DB2Driver.connect(DB2Driver.java:475)
	at com.ibm.db2.jcc.DB2Driver.connect(DB2Driver.java:116)
	at com.mchange.v2.c3p0.DriverManagerDataSource.getConnection(DriverManagerDataSource.java:134)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:182)
	at com.mchange.v2.c3p0.WrapperConnectionPoolDataSource.getPooledConnection(WrapperConnectionPoolDataSource.java:171)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager.acquireResource(C3P0PooledConnectionPool.java:137)
	at com.mchange.v2.resourcepool.BasicResourcePool.doAcquire(BasicResourcePool.java:1014)
	at com.mchange.v2.resourcepool.BasicResourcePool.access$800(BasicResourcePool.java:32)
	at com.mchange.v2.resourcepool.BasicResourcePool$AcquireTask.run(BasicResourcePool.java:1810)
	at com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread.run(ThreadPoolAsynchronousRunner.java:547)
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at com.ibm.db2.jcc.t4.v.run(v.java:49)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.ibm.db2.jcc.t4.vb.a(vb.java:419)
	... 18 more
[INFO ][2014-05-06 18:16:48,495][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:16:48,629][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:20:30,806][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:20:30,941][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:21:02,488][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:21:02,750][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:21:03,654][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:21:04,125][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:21:04,146][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:21:04,324][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:21:55,604][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:21:55,714][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:21:57,154][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:21:57,278][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:22:31,907][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:22:33,405][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:22:34,471][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:22:37,315][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:22:49,911][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:22:50,193][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:22:51,334][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:22:51,461][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:28:54,495][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID in (:keys)
[ERROR][2014-05-06 18:28:54,670][com.cherrypicks.boc.cms.dmi.AbstractDMI] - PreparedStatementCallback; SQL [DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = ?]; DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96; nested exception is com.ibm.db2.jcc.am.SqlIntegrityConstraintViolationException: DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = ?]; DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96; nested exception is com.ibm.db2.jcc.am.SqlIntegrityConstraintViolationException: DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:245)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:603)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:812)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:868)
	at com.cherrypicks.boc.common.jdbc.Jdbc.updateForRecord(Jdbc.java:309)
	at com.cherrypicks.boc.common.jdbc.Jdbc.updateForBoolean(Jdbc.java:304)
	at com.cherrypicks.boc.dao.impl.AbstractBaseDaoDB2.del(AbstractBaseDaoDB2.java:273)
	at com.cherrypicks.boc.service.impl.AbstractBaseService.delete(AbstractBaseService.java:40)
	at com.cherrypicks.boc.cms.dmi.CampaginManagerDMI.remove(CampaginManagerDMI.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.isomorphic.base.Reflection.adaptArgsAndInvoke(Reflection.java:972)
	at com.isomorphic.datasource.DataSourceDMI.execute(DataSourceDMI.java:416)
	at com.isomorphic.datasource.DataSourceDMI.execute(DataSourceDMI.java:64)
	at com.isomorphic.datasource.DSRequest.execute(DSRequest.java:2027)
	at com.isomorphic.servlet.IDACall.handleDSRequest(IDACall.java:216)
	at com.isomorphic.servlet.IDACall.processRPCTransaction(IDACall.java:173)
	at com.isomorphic.servlet.IDACall.processRequest(IDACall.java:138)
	at com.isomorphic.servlet.IDACall.doPost(IDACall.java:74)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at com.isomorphic.servlet.BaseServlet.service(BaseServlet.java:152)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:322)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:184)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:155)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.ibm.db2.jcc.am.SqlIntegrityConstraintViolationException: DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96
	at com.ibm.db2.jcc.am.bd.a(bd.java:675)
	at com.ibm.db2.jcc.am.bd.a(bd.java:60)
	at com.ibm.db2.jcc.am.bd.a(bd.java:127)
	at com.ibm.db2.jcc.am.io.b(io.java:2373)
	at com.ibm.db2.jcc.am.io.c(io.java:2356)
	at com.ibm.db2.jcc.t4.ab.l(ab.java:370)
	at com.ibm.db2.jcc.t4.ab.a(ab.java:62)
	at com.ibm.db2.jcc.t4.p.a(p.java:50)
	at com.ibm.db2.jcc.t4.rb.b(rb.java:220)
	at com.ibm.db2.jcc.am.jo.nc(jo.java:3394)
	at com.ibm.db2.jcc.am.jo.b(jo.java:4357)
	at com.ibm.db2.jcc.am.jo.fc(jo.java:774)
	at com.ibm.db2.jcc.am.jo.executeUpdate(jo.java:756)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:818)
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:1)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:587)
	... 67 more
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,616][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,617][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,617][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,617][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,617][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,617][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - destroy
[INFO ][2014-05-06 18:32:49,619][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - destroy
[INFO ][2014-05-06 18:32:50,189][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:32:50,190][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:32:50,225][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:32:50,461][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:32:50,492][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:33:56,331][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:33:56,331][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:33:56,404][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:33:56,678][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:33:56,755][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:33:57,218][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:33:57,255][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:33:57,271][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:33:57,287][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:33:57,322][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:33:57,345][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:33:57,360][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:33:57,378][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:33:57,392][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:33:57,406][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:33:57,424][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:33:57,442][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:33:57,461][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:33:57,706][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:33:57,785][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:33:58,026][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@6db0dec3, org.springframework.security.web.context.SecurityContextPersistenceFilter@76f10c77, org.springframework.security.web.authentication.logout.LogoutFilter@4b6995a2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@dee55c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29a3fb76, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4cd21555, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7476a6d9, org.springframework.security.web.session.SessionManagementFilter@19c42c4b, org.springframework.security.web.access.ExceptionTranslationFilter@1e37fd24, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6dcc55fb]
[INFO ][2014-05-06 18:33:58,050][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:34:07,156][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911m0m0oc2wpc86|1dda59fa, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911m0m0oc2wpc86|1dda59fa, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 18:34:07,818][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 18:34:07,956][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 18:34:10,405][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:34:10,606][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:34:35,195][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:34:35,265][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:35:12,414][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:35:12,427][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:35:14,990][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:35:15,072][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:35:31,650][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:35:31,898][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:35:33,746][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:35:34,403][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:37:49,973][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:37:50,186][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:37:53,287][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:37:53,370][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:38:27,832][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:38:28,021][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:38:29,560][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:38:29,620][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:39:45,220][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.MERCHANT
[INFO ][2014-05-06 18:39:45,371][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.MERCHANT
[INFO ][2014-05-06 18:39:47,384][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:39:47,649][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:39:48,582][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:39:48,649][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:40:56,660][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:40:56,897][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:40:58,276][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:40:58,339][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:43:49,207][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 18:43:49,207][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 18:43:49,323][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 18:43:49,615][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 18:43:49,691][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 18:43:50,230][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 18:43:50,276][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 18:43:50,299][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 18:43:50,325][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 18:43:50,354][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 18:43:50,377][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 18:43:50,395][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 18:43:50,411][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 18:43:50,424][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 18:43:50,441][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 18:43:50,459][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 18:43:50,472][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 18:43:50,486][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 18:43:50,716][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 18:43:50,822][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 18:43:51,123][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@3a5dfc67, org.springframework.security.web.context.SecurityContextPersistenceFilter@7065ec20, org.springframework.security.web.authentication.logout.LogoutFilter@33716286, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@58fb65cc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60d861b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1df7670d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d8e95d9, org.springframework.security.web.session.SessionManagementFilter@3c10098b, org.springframework.security.web.access.ExceptionTranslationFilter@40e2a37b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f5b0184]
[INFO ][2014-05-06 18:43:51,154][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 18:44:39,878][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911m0yq6l1w08k3l|66a9aa83, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911m0yq6l1w08k3l|66a9aa83, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 18:44:40,473][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 18:44:40,593][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 18:44:43,813][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:44:44,006][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:46:39,129][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:46:39,378][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:46:40,812][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:46:40,880][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:46:40,925][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:46:40,985][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:46:41,001][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:46:41,060][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:47:25,438][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:47:25,658][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:47:27,785][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:47:27,846][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:47:31,277][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:47:31,370][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:47:43,791][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:47:43,858][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:48:40,760][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:48:40,973][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:48:42,360][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:48:42,423][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:48:42,488][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:48:42,549][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:48:42,564][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:48:42,624][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:49:24,594][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:49:24,830][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:49:25,917][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:49:26,031][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:49:26,546][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:49:26,878][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:51:57,697][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 18:51:57,804][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:57,841][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:57,863][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:57,895][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:57,955][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 18:51:57,993][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:58,054][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:58,089][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:58,146][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:58,239][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:58,327][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:59,142][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:51:59,204][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 18:52:17,421][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - result size:0 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN_COUPON
[INFO ][2014-05-06 18:52:17,557][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - result size:0 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN_COUPON
[INFO ][2014-05-06 18:52:17,820][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:52:18,943][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:52:19,010][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:54:01,829][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:55:37,108][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:55:38,569][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:2 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:55:45,044][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID in (:keys)
[INFO ][2014-05-06 18:55:45,082][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - updatedCount:1 sql:DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = 41
[INFO ][2014-05-06 18:55:51,379][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID in (:keys)
[INFO ][2014-05-06 18:55:51,418][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - updatedCount:1 sql:DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = 42
[INFO ][2014-05-06 18:55:54,107][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:55:54,182][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:57:41,918][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:57:47,651][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:57:48,611][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:57:50,296][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 18:57:50,544][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 18:58:20,753][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 18:59:29,005][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID in (:keys)
[ERROR][2014-05-06 18:59:29,226][com.cherrypicks.boc.cms.dmi.AbstractDMI] - PreparedStatementCallback; SQL [DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = ?]; DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96; nested exception is com.ibm.db2.jcc.am.SqlIntegrityConstraintViolationException: DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = ?]; DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96; nested exception is com.ibm.db2.jcc.am.SqlIntegrityConstraintViolationException: DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:245)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:603)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:812)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:868)
	at com.cherrypicks.boc.common.jdbc.Jdbc.updateForRecord(Jdbc.java:309)
	at com.cherrypicks.boc.common.jdbc.Jdbc.updateForBoolean(Jdbc.java:304)
	at com.cherrypicks.boc.dao.impl.AbstractBaseDaoDB2.del(AbstractBaseDaoDB2.java:273)
	at com.cherrypicks.boc.service.impl.AbstractBaseService.delete(AbstractBaseService.java:40)
	at com.cherrypicks.boc.cms.dmi.CampaginManagerDMI.remove(CampaginManagerDMI.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.isomorphic.base.Reflection.adaptArgsAndInvoke(Reflection.java:972)
	at com.isomorphic.datasource.DataSourceDMI.execute(DataSourceDMI.java:416)
	at com.isomorphic.datasource.DataSourceDMI.execute(DataSourceDMI.java:64)
	at com.isomorphic.datasource.DSRequest.execute(DSRequest.java:2027)
	at com.isomorphic.servlet.IDACall.handleDSRequest(IDACall.java:216)
	at com.isomorphic.servlet.IDACall.processRPCTransaction(IDACall.java:173)
	at com.isomorphic.servlet.IDACall.processRequest(IDACall.java:138)
	at com.isomorphic.servlet.IDACall.doPost(IDACall.java:74)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
	at com.isomorphic.servlet.BaseServlet.service(BaseServlet.java:152)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:322)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:184)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:155)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:945)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.ibm.db2.jcc.am.SqlIntegrityConstraintViolationException: DB2 SQL Error: SQLCODE=-532, SQLSTATE=23504, SQLERRMC=BOC_CAMPAIGN.CAMPAIGN_LANG_MAP.FK_CAMPAIGN, DRIVER=3.64.96
	at com.ibm.db2.jcc.am.bd.a(bd.java:675)
	at com.ibm.db2.jcc.am.bd.a(bd.java:60)
	at com.ibm.db2.jcc.am.bd.a(bd.java:127)
	at com.ibm.db2.jcc.am.io.b(io.java:2373)
	at com.ibm.db2.jcc.am.io.c(io.java:2356)
	at com.ibm.db2.jcc.t4.ab.l(ab.java:370)
	at com.ibm.db2.jcc.t4.ab.a(ab.java:62)
	at com.ibm.db2.jcc.t4.p.a(p.java:50)
	at com.ibm.db2.jcc.t4.rb.b(rb.java:220)
	at com.ibm.db2.jcc.am.jo.nc(jo.java:3394)
	at com.ibm.db2.jcc.am.jo.b(jo.java:4357)
	at com.ibm.db2.jcc.am.jo.fc(jo.java:774)
	at com.ibm.db2.jcc.am.jo.executeUpdate(jo.java:756)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:818)
	at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:1)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:587)
	... 67 more
