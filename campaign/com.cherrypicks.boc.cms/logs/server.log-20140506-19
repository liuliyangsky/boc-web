[INFO ][2014-05-06 19:01:34,738][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,739][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,740][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,740][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,740][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,740][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,740][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,743][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,743][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,743][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,743][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,743][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - destroy
[INFO ][2014-05-06 19:01:34,743][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - destroy
[INFO ][2014-05-06 19:01:35,320][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 19:01:35,320][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 19:01:35,355][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 19:01:35,583][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 19:01:35,613][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 19:01:36,049][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 19:01:36,095][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 19:01:36,117][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 19:01:36,145][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 19:01:36,169][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 19:01:36,214][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 19:01:36,235][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 19:01:36,250][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 19:01:36,272][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 19:01:36,288][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 19:01:36,303][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 19:01:36,318][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 19:01:36,338][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 19:01:36,635][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 19:01:36,766][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 19:01:37,023][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@228690e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@309238ca, org.springframework.security.web.authentication.logout.LogoutFilter@4fce6eaf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@79c4cc17, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67333875, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53bfbe41, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5163c85b, org.springframework.security.web.session.SessionManagementFilter@6df6f81b, org.springframework.security.web.access.ExceptionTranslationFilter@711aed03, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ebe99f8]
[INFO ][2014-05-06 19:01:37,044][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 19:05:22,439][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 19:05:22,440][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 19:05:22,521][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 19:05:22,816][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 19:05:22,886][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 19:05:23,412][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 19:05:23,455][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 19:05:23,476][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 19:05:23,491][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 19:05:23,510][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 19:05:23,535][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 19:05:23,558][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 19:05:23,582][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 19:05:23,594][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 19:05:23,610][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 19:05:23,629][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 19:05:23,645][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 19:05:23,665][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 19:05:23,886][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 19:05:23,972][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 19:05:24,171][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@1010cf62, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f9f332b, org.springframework.security.web.authentication.logout.LogoutFilter@6cd86cae, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@74c74b55, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4822f558, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f198967, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@758c022c, org.springframework.security.web.session.SessionManagementFilter@3ae2d2fe, org.springframework.security.web.access.ExceptionTranslationFilter@18a3fe6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b6915d4]
[INFO ][2014-05-06 19:05:24,197][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 19:05:42,926][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911m1qg0scpmoi0|49f8a4fd, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911m1qg0scpmoi0|49f8a4fd, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 19:05:45,049][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 19:05:45,251][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 19:05:50,014][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:05:50,182][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:05:55,522][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID in (:keys)
[INFO ][2014-05-06 19:05:55,642][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - updatedCount:1 sql:DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = 43
[INFO ][2014-05-06 19:05:57,732][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:05:58,013][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:06:25,716][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:06:27,014][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:06:27,864][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:06:28,661][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:06:29,415][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:06:31,556][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:06:33,161][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:06:33,418][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:08:33,351][org.springframework.security.core.SpringSecurityCoreVersion] - You are running with Spring Security Core 3.1.1.RELEASE
[INFO ][2014-05-06 19:08:33,352][org.springframework.security.config.SecurityNamespaceHandler] - Spring Security 'config' module version is 3.1.1.RELEASE
[INFO ][2014-05-06 19:08:33,436][org.springframework.security.config.http.HttpSecurityBeanDefinitionParser] - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.access.channel.ChannelProcessingFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 100, Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 300, Root bean: class [org.springframework.security.web.authentication.logout.LogoutFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, <org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter#0>, order = 800, Root bean: class [org.springframework.security.web.savedrequest.RequestCacheAwareFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1300, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1400, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.session.SessionManagementFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1800, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1900, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2000]
[INFO ][2014-05-06 19:08:33,862][com.mchange.v2.log.MLog] - MLog clients using log4j logging.
[INFO ][2014-05-06 19:08:33,967][com.mchange.v2.c3p0.C3P0Registry] - Initializing c3p0-0.9.1.2 [built 21-May-2007 15:04:56; debug? true; trace: 10]
[INFO ][2014-05-06 19:08:34,641][com.cherrypicks.boc.dao.impl.SystemFunctionDaoImpl] - init
[INFO ][2014-05-06 19:08:34,672][com.cherrypicks.boc.dao.impl.SystemRoleDaoImpl] - init
[INFO ][2014-05-06 19:08:34,695][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - init
[INFO ][2014-05-06 19:08:34,719][com.cherrypicks.boc.dao.impl.SystemUserDaoImpl] - init
[INFO ][2014-05-06 19:08:34,736][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - init
[INFO ][2014-05-06 19:08:34,760][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - init
[INFO ][2014-05-06 19:08:34,790][com.cherrypicks.boc.dao.impl.CampaignLangMapDaoImpl] - init
[INFO ][2014-05-06 19:08:34,813][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - init
[INFO ][2014-05-06 19:08:34,832][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - init
[INFO ][2014-05-06 19:08:34,849][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - init
[INFO ][2014-05-06 19:08:34,866][com.cherrypicks.boc.dao.impl.MerchantDaoImpl] - init
[INFO ][2014-05-06 19:08:34,883][com.cherrypicks.boc.dao.impl.MerchantLangMapDaoImpl] - init
[INFO ][2014-05-06 19:08:34,903][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - init
[INFO ][2014-05-06 19:08:35,129][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/login.jsp*'], []
[INFO ][2014-05-06 19:08:35,261][org.springframework.security.web.access.channel.ChannelProcessingFilter] - Validated configuration attributes
[INFO ][2014-05-06 19:08:35,529][org.springframework.security.web.DefaultSecurityFilterChain] - Creating filter chain: org.springframework.security.web.util.AnyRequestMatcher@1, [org.springframework.security.web.access.channel.ChannelProcessingFilter@3b5789a5, org.springframework.security.web.context.SecurityContextPersistenceFilter@700dce12, org.springframework.security.web.authentication.logout.LogoutFilter@1a543937, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f785762, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25b0eadd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20b6680, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a765e8c, org.springframework.security.web.session.SessionManagementFilter@31395750, org.springframework.security.web.access.ExceptionTranslationFilter@2b935e6f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@581cdfc2]
[INFO ][2014-05-06 19:08:35,577][org.springframework.security.config.http.DefaultFilterChainValidator] - Checking whether login URL '/login.jsp' is accessible with your configuration
[INFO ][2014-05-06 19:08:44,082][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 1, acquireRetryAttempts -> 1, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 1bwm7hr911m1ujg0xcslpq|7eab48a7, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.ibm.db2.jcc.DB2Driver, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 1bwm7hr911m1ujg0xcslpq|7eab48a7, idleConnectionTestPeriod -> 60, initialPoolSize -> 2, jdbcUrl -> jdbc:db2://office2.cherrypicks.com:38500/SM_MBA, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 6000, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 100, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 20, numHelperThreads -> 3, numThreadsAwaitingCheckoutDefaultUser -> 0, preferredTestQuery -> null, properties -> {user=******, password=******}, propertyCycle -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false ]
[INFO ][2014-05-06 19:08:44,923][com.cherrypicks.boc.dao.impl.SystemUserRoleMapDaoImpl] - result size:1 sql:select r.* from BOC_CAMPAIGN.SYSTEM_ROLE r, BOC_CAMPAIGN.SYSTEM_USER_ROLE_MAP map, BOC_CAMPAIGN.SYSTEM_USER u where map.ROLE_ID = r.ID and map.USER_ID = u.ID and u.USER_NAME = 'admin'
[INFO ][2014-05-06 19:08:45,132][com.cherrypicks.boc.dao.impl.SystemRoleFunctionMapDaoImpl] - result size:8 sql:select sf.* from BOC_CAMPAIGN.SYSTEM_FUNCTION sf, BOC_CAMPAIGN.SYSTEM_ROLE_FUNCTION_MAP rfm where sf.ID = rfm.FUNC_ID and rfm.ROLE_ID in (:roleIds) 
[INFO ][2014-05-06 19:08:49,166][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:08:49,371][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:08:52,488][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:08:52,671][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:08:56,177][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID in (:keys)
[INFO ][2014-05-06 19:08:56,219][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - updatedCount:1 sql:DELETE FROM BOC_CAMPAIGN.CAMPAIGN WHERE ID = 44
[INFO ][2014-05-06 19:08:59,841][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:08:59,991][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:09:31,981][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:09:35,283][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:09:35,390][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:09:35,545][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:09:35,659][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:10:45,702][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:10:45,913][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:11:00,901][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:11:01,125][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:11:04,709][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:11:04,830][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:11:04,977][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:11:05,092][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:11:26,803][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - result size:0 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN_COUPON
[INFO ][2014-05-06 19:11:26,978][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - result size:0 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN_COUPON
[INFO ][2014-05-06 19:11:29,412][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 19:11:29,527][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:29,538][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:29,605][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 19:11:29,695][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:29,857][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:29,947][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:30,114][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:30,202][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:30,367][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:30,458][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:30,636][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:32,105][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:32,179][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:39,033][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:39,177][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:11:40,170][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:11:41,376][com.cherrypicks.boc.dao.impl.CampaignCouponDaoImpl] - result size:0 sql:SELECT * FROM BOC_CAMPAIGN.CAMPAIGN_COUPON
[INFO ][2014-05-06 19:11:42,974][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:11:46,116][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:11:46,379][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:13:09,232][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 19:13:09,418][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:09,426][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:09,486][com.cherrypicks.boc.dao.impl.ActivityDaoImpl] - result size:4 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY
[INFO ][2014-05-06 19:13:09,495][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:09,754][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:09,778][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:10,013][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:10,041][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:10,317][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:10,321][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:10,593][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:11,133][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:11,263][com.cherrypicks.boc.dao.impl.ActivityAddressDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.ACTIVITY_ADDRESS
[INFO ][2014-05-06 19:13:16,304][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:13:16,477][com.cherrypicks.boc.dao.impl.CampaignDaoImpl] - result size:1 sql:SELECT CAMPAIGN.ID ,CAMPAIGN.START_DATE,CAMPAIGN.END_DATE,CAMPAIGN.CAMPAIGN_TYPE,CAMPAIGN.PLAY_TYPE,CAMPAIGN.DISPLAY_ORDER,CAMPAIGN.CREATED_TIME,CAMPAIGN.CREATED_BY,CAMPAIGN.UPDATED_TIME,CAMPAIGN.UPDATED_BY,CAMPAIGN_LANG.CAMPAIGN_NAME ,CAMPAIGN_LANG.ICON,CAMPAIGN_LANG.LANG_CODE FROM BOC_CAMPAIGN.CAMPAIGN CAMPAIGN LEFT OUTER JOIN BOC_CAMPAIGN.CAMPAIGN_LANG_MAP CAMPAIGN_LANG ON CAMPAIGN.ID = CAMPAIGN_LANG.CAMPAIGN_ID
[INFO ][2014-05-06 19:13:17,526][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:13:17,647][com.cherrypicks.boc.cms.dmi.LanguageDMI] - procesing DMI fetch operation
[INFO ][2014-05-06 19:13:17,771][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
[INFO ][2014-05-06 19:13:17,888][com.cherrypicks.boc.dao.impl.LanguageDaoImpl] - result size:3 sql:SELECT * FROM BOC_CAMPAIGN.LANGUAGE
